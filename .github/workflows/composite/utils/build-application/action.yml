name: Build application

description: 'Setup JDK 17 & build application via gradle.'

inputs:
  working_dir:
    required: true
    default: './'
    description: 'A directory where gradlew exists'

  java_version:
    required: true
    default: 17
    description: 'JDK version'

  distribution:
    required: true
    default: 'temurin'
    description: 'JDK distribution'

runs:
  using: composite

  steps:
    - name: Check whether gradlew exists
      shell: bash
      run: |
        if [ ! -f ${{ inputs.working_dir }}gradlew ]; then
          echo "No gradlew exists on working directory ${{ inputs.working_dir }}"
          exit 1
        fi

    - name: Change gradlew permission
      shell: bash
      run: chmod +x ${{ inputs.working_dir }}gradlew


    - name: Cache gradle
      id: cache-gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Cache jar
      id: cache-jar
      uses: actions/cache@v4
      with:
        path: |
          ${{ inputs.working_dir }}/build/libs/**
        key: ${{ runner.os }}-jar-${{ hashFiles(format('{0}/build/libs/**', inputs.working_dir), format('{0}/src/**/resources/**', inputs.working_dir)) }}
        restore-keys: ${{ runner.os }}-jar-


    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java_version }}
        distribution: ${{ inputs.distribution }}

    - name: Build when no cache found
      if: steps.cache-gradle.outputs.cache-hit != 'true' || steps.cache-jar.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Cache miss. Running gradlew build..."
        ${{ inputs.working_dir }}gradlew build -x test
