name: Build application

description: 'Setup JDK 17 & build application via gradle.'

inputs:
  working_dir:
    required: true
    default: './'
    description: 'A directory where gradlew exists'

runs:
  using: composite

  steps:
    - name: Check whether gradlew exists
      shell: bash
      run: |
        if [ ! -f ${{ inputs.working_dir }}gradlew ]; then
          echo "No gradlew exists on working directory ${{ inputs.working_dir }}"
          exit 1
        fi

    - name: Change gradlew permission
      shell: bash
      run: chmod +x ${{ inputs.working_dir }}gradlew

    - name: Cache gradle
      uses: actions/cache@v4
      id: cache-gradle
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Cache JDK 17
      uses: actions/cache@v4
      id: cache-jdk-17
      with:
        path: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.*/x64
        key: ${{ runner.os }}-jdk-17
        restore-keys: ${{ runner.os }}-jdk-17

    - name: Setup JDK 17 if no cache exists
      uses: actions/setup-java@v4
      if: steps.cache-jdk-17.outputs.cache-hit != 'true'
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Build if no gradle cache exists
      if: steps.cache-gradle.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "No gradle found via cache. Running gradlew build..."
        ${{ inputs.working_dir }}gradlew build -x test
